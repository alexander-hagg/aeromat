/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  18.06
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       true;


geometry
{
    test.stl
    {
        type triSurfaceMesh;
        scale 0.001;
        name carMirror;
    }

    wake            //USER DEFINED REGION NAME
    {
        type searchableCylinder;
        point1 (-0.15 -0.028 0.67);
        point2 ( 0.25 -0.028 0.67);         
        radius 0.13;       
    }
};

castellatedMeshControls
{               
    maxLocalCells  40000000;
    maxGlobalCells 50000000;

    minRefinementCells 1;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 3;

    features
    (
        {
          file "test.eMesh";
          level 6;
        }
    );

    refinementSurfaces
    {
        carMirror
        {
          level (6 7); 
       // gapLevelIncrement 1; 

            patchInfo
            {
             type wall;
             inGroups (carGroup);
            }
        }    
    }
    resolveFeatureAngle 15;  //15   // Resolve sharp angles

    refinementRegions
    {
        wake
        {
          mode inside;
          levels ((1e15 5)); // (1e15 7)
        }
    }
        locationInMesh     (0.195 -0.135  0.755);

//      specify where the mesh should be removed
//      locationsOutsideMesh ((100 100 100));
        allowFreeStandingZoneFaces true; 
}

snapControls
{
    nSmoothPatch 10;
    nSmoothInternal $nSmoothPatch;
    tolerance 2.0; //4
    nSolveIter 200;
    nRelaxIter 10;

 // Feature snapping

    nFeatureSnapIter 10; // default=10 // 20
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap false;
    detectNearSurfacesSnap true; // new
// Additional parameters
    nFaceSplitInterval 5; // default = -1
    detectBaffles true;   // default = true
    releasePoints true;   // default = false
    stringFeatures true;  // default = true
    avoidDiagonal true;   // default = false
//    concaveAngle 15;    // default = 45
    minAreaRatio 0.1;     // default = 0.3
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true; 

    layers
    {
        carMirror
       {
        nSurfaceLayers 7; // 9
       }
    }

    expansionRatio 1.3;
    finalLayerThickness 0.5;
    minThickness 0.01;

    nGrow 0;  //default = 0

// Static mesh parameters
    featureAngle 60;
    slipFeatureAngle 30;
// mergePatchFacesAngle //default = featureAngle


// Patch displacement
    nSmoothSurfaceNormals 5;
    nSmoothThickness 10;
    nSmoothNormals 30;
    maxFaceThicknessRatio 0.5;

//  Mesh shrinking set-up -----------------------------------
    minMedianAxisAngle 90;
    maxThicknessToMedialRatio 0.3;
    nMedialAxisIter 10;  // default: 2^31 (unlimited)
    nRelaxIter 10;
    nBufferCellsNoExtrude 0;
    nLayerIter 200;

// DisplacementMotionSolver mesh shrinker: Alternative
//
//     meshShrinker    displacementMotionSolver;
//     solver          displacementLaplacian;
//     displacementLaplacianCoeffs
//    {
//        diffusivity     quadratic inverseDistance 1(wall);
//    }
}

// Generic mesh quality settings. 
// At any undoable phase these determine where to undo.

meshQualityControls
{

//    #include "meshQualityDict"

    maxNonOrtho         65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;

    maxConcave          80;
    minVol         	1e-13;
    minTetQuality   	1e-30;
    minArea         	1e-13;
    minTwist        	0.02;
    minDeterminant  	0.001;
    minFaceWeight   	0.05;
    minVolRatio     	0.01;

    minTriangleTwist    -1;
  // minVolCollapseRatio 0.5;

    nSmoothScale 4;
    errorReduction 0.75;
}

// Advanced: Write flags
writeFlags
(
    scalarLevels
    layerSets
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-8;


// ************************************************************************* //
