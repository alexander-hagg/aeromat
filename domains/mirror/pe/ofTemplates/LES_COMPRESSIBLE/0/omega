/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1806                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      omega;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 -1 0 0 0 0];

internalField   uniform 6.7082039; 	

// As for the turbulent length scale, it should be related to the mirror scales. Because, in general, we 
// have turbulence near the mirror only. Our mirror size is: 0.16 x 0.25 x 0.14. Lets assume that maximum 
// size is 0.25. Usually l is taken a few persentage of this scale. For example, for turbulent pipe, it is l=0.07d
// hydraulic radius. So, if we follow them, our l = 0.07*0.25=0.0175. 
// omega = C_mu^(-1/4) * sqrt(k) / l = 0.09^(-0.25) * sqrt (0.109) / 0.0175 = 1.825741858*0.316227766/0.0175 = 32.991443946
// so, omega = 32.991443946
//
// if length scale is approx: 0.2, then omega = 3.0139

		
boundaryField
{
    "(left|right|bottom|top|front).*"
    {
        type            fixedValue;
        value		uniform 6.7082039; 
    }

"proc.*"
    {
        type            processor;
    }


   back
    {
        type            omegaWallFunction;
        value           $internalField;
    }


   carGroup
    {
        type            omegaWallFunction;
        value           $internalField;
    }

}

